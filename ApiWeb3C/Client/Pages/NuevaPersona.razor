@page "/nueva"
@page "/nueva/{Id:int}"
@inject HttpClient _http;
@inject NavigationManager _navegador;

<h1>Agregar Jugador</h1>

<EditForm Model="lapersona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <label for="txtNombre" class="col-sm-2 col-form-label">Nickname</label>
        <div class="col-sm-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="lapersona.Posicion" />
            <ValidationMessage For="()=>lapersona.Posicion" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtCorreo" class="col-sm-2 col-form-label">Posicion</label>
        <div class="col-sm-10">
            <InputText id="txtCorreo" class="form-control" @bind-Value="lapersona.Correo" />
            <ValidationMessage For="()=>lapersona.Correo" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtTelefono" class="col-sm-2 col-form-label">Nacionalidad</label>
        <div class="col-sm-10">
            <InputText id="txtTelefono" class="form-control" @bind-Value="lapersona.Nacionalidad" />
            <ValidationMessage For="()=>lapersona.Nacionalidad" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtClasificacion" class="col-sm-2 col-form-label">Equipo</label>
        <div class="col-sm-10">
            <InputSelect id="txtClasificacion" class="form-control" @bind-Value="lapersona.ClasificacionId">
                @foreach (Equipo clasificacion in lasclacificaciones)
                {
                    <option value="@clasificacion.Id">@clasificacion.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>lapersona.Nickname" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtHabito" class="col-sm-2 col-form-label">Hábitos</label>
        <div class="col-sm-10">
            <InputSelect id="txtHabito" class="form-control" @bind-Value="habitosseleccionados" multiple="true">
                @foreach (Habito habito in loshabitos)
                {
                    <option value="@habito.Id">@habito.Nombre</option>
                }
            </InputSelect>
        </div>
    </div>
    <button class="btn btn-success" type="submit">Guardar</button>
    <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
</EditForm>

<div>
    <p>Selecciones realizadas:</p>
    <ul>
        @foreach (var selectedOption in habitosseleccionados)
        {
            <li>@selectedOption</li>
        }
    </ul>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private Jugador lapersona = new();
    private string letrero = "Nueva";
    private List<Equipo> lasclacificaciones = new();
    private string[] habitosseleccionados = new string[0];
    private List<Habito> loshabitos = new();

    protected override async Task OnParametersSetAsync()
    {
        lasclacificaciones = await _http.GetFromJsonAsync<List<Equipo>>("api/clasificacion");
        loshabitos = await _http.GetFromJsonAsync<List<Habito>>("api/habitos");
        if (Id == 0)
        {
            letrero = "Nueva";
            lapersona = new();
            lapersona.ClasificacionId = lasclacificaciones[0].Id;
        }
        else
        {
            letrero = "Modificar";
            lapersona = await _http.GetFromJsonAsync<Jugador>($"api/personas/{Id}");
            if (lapersona.Habitos != null)
            {
                habitosseleccionados = lapersona.Habitos.Select(h => h.Id.ToString()).ToArray();
            }
        }
    }

    private async void Guardar()
    {
        if (Id == 0)
        {
            if (habitosseleccionados.Length > 0)
            {
                lapersona.Habitos = new List<Habito>();
                foreach (string id in habitosseleccionados)
                {
                    lapersona.Habitos.Add(loshabitos.First(r => r.Id == Int32.Parse(id)));
                }
            }
            await _http.PostAsJsonAsync<Jugador>("api/personas", lapersona);
        }
        else
        {
            await _http.PutAsJsonAsync<Jugador>($"api/personas/{Id}", lapersona);
        }
        _navegador.NavigateTo("/");
    }

    private void Cancelar()
    {
        _navegador.NavigateTo("/");
    }

    // Evento de cambio en la selección
    private void SelectionChanged(ChangeEventArgs e)
    {
        habitosseleccionados = ((string[])e.Value) ?? new string[0];
    }
}
